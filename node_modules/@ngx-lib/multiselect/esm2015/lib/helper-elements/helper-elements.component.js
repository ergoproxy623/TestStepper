/**
 * @fileoverview added by tsickle
 * Generated from: lib/helper-elements/helper-elements.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Output, Input, ChangeDetectionStrategy } from '@angular/core';
export class HelperElementsComponent {
    constructor() {
        this.multiple = false;
        this.disabled = false;
        this.selectAllClicked = new EventEmitter();
        this.selectNoneClicked = new EventEmitter();
        this.resetClicked = new EventEmitter();
    }
    /**
     * @return {?}
     */
    selectAll() {
        this.selectAllClicked.emit();
    }
    /**
     * @return {?}
     */
    selectNone() {
        this.selectNoneClicked.emit();
    }
    /**
     * @return {?}
     */
    reset() {
        this.resetClicked.emit();
    }
}
HelperElementsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ms-helper-elements',
                template: "<div class=\"helper-buttons\">\n  <fieldset [disabled]=\"disabled\">\n    <ng-container *ngIf=\"multiple\">\n      <button class=\"helper-button\" (click)=\"selectAll()\">\u2713 Select All</button>\n      <button class=\"helper-button\" (click)=\"selectNone()\">\u00D7 Select None</button>\n    </ng-container>\n    <button class=\"helper-button\" (click)=\"reset()\">\u21B6 Reset</button>\n  </fieldset>\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".helper-button{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;border:1px solid rgba(0,0,0,.12);border-radius:.25rem;font-size:.75rem;font-weight:400;height:30px;max-height:30px;user-select:none;white-space:nowrap}fieldset{border:none;padding:0}.helper-buttons{border-bottom:1px solid #ddd;padding:2px}.mat-multiselect :host .helper-button{background-color:transparent;color:#444}.mat-multiselect :host .helper-button:not(:last-child){margin:0 2px}.bs-multiselect :host .helper-button{-webkit-tap-highlight-color:transparent;box-sizing:border-box;cursor:pointer;outline:0;padding:.25em}.bs-multiselect .helper-button:not(:last-child){margin-right:4px}"]
            }] }
];
/** @nocollapse */
HelperElementsComponent.ctorParameters = () => [];
HelperElementsComponent.propDecorators = {
    multiple: [{ type: Input }],
    disabled: [{ type: Input }],
    selectAllClicked: [{ type: Output }],
    selectNoneClicked: [{ type: Output }],
    resetClicked: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    HelperElementsComponent.prototype.multiple;
    /** @type {?} */
    HelperElementsComponent.prototype.disabled;
    /** @type {?} */
    HelperElementsComponent.prototype.selectAllClicked;
    /** @type {?} */
    HelperElementsComponent.prototype.selectNoneClicked;
    /** @type {?} */
    HelperElementsComponent.prototype.resetClicked;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLWVsZW1lbnRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcGFua2FqcGFya2FyL0RvY3VtZW50cy9HaXRIdWIvbXVsdGlzZWxlY3QvcHJvamVjdHMvbXVsdGlzZWxlY3Qvc3JjLyIsInNvdXJjZXMiOlsibGliL2hlbHBlci1lbGVtZW50cy9oZWxwZXItZWxlbWVudHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFoRyxNQUFNLE9BQU8sdUJBQXVCO0lBUWxDO1FBUFMsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWhCLHFCQUFnQixHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdEMsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN2QyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFN0IsQ0FBQzs7OztJQUVoQixTQUFTO1FBQ1AsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQixDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLHdhQUErQztnQkFFL0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2hEOzs7Ozt1QkFFRSxLQUFLO3VCQUNMLEtBQUs7K0JBRUwsTUFBTTtnQ0FDTixNQUFNOzJCQUNOLE1BQU07Ozs7SUFMUCwyQ0FBMEI7O0lBQzFCLDJDQUEwQjs7SUFFMUIsbURBQWdEOztJQUNoRCxvREFBaUQ7O0lBQ2pELCtDQUE0QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtcy1oZWxwZXItZWxlbWVudHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vaGVscGVyLWVsZW1lbnRzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaGVscGVyLWVsZW1lbnRzLmNvbXBvbmVudC5jc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgSGVscGVyRWxlbWVudHNDb21wb25lbnQge1xuICBASW5wdXQoKSBtdWx0aXBsZSA9IGZhbHNlO1xuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoKSBzZWxlY3RBbGxDbGlja2VkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgc2VsZWN0Tm9uZUNsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSByZXNldENsaWNrZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIHNlbGVjdEFsbCgpIHtcbiAgICB0aGlzLnNlbGVjdEFsbENsaWNrZWQuZW1pdCgpO1xuICB9XG5cbiAgc2VsZWN0Tm9uZSgpIHtcbiAgICB0aGlzLnNlbGVjdE5vbmVDbGlja2VkLmVtaXQoKTtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMucmVzZXRDbGlja2VkLmVtaXQoKTtcbiAgfVxufVxuIl19