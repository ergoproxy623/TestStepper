/**
 * @fileoverview added by tsickle
 * Generated from: lib/filter-options/filter-options.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { FormControl } from '@angular/forms';
export class FilterOptionsComponent {
    constructor() {
        this.onSearchChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    clearInputFilter() {
        this.filterName.setValue('');
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.filterName = new FormControl('');
        this.filterNameSubscription = this.filterName.valueChanges.subscribe((/**
         * @param {?} val
         * @return {?}
         */
        val => this.onSearchChange.emit(val)));
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.filterNameSubscription.unsubscribe();
    }
}
FilterOptionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ms-filter-options',
                template: "<div class=\"input-search\">\n  <div class=\"field-infix\">\n    <input\n      autofocus\n      placeholder=\"Search options here..\"\n      type=\"text\"\n      [formControl]=\"filterName\"\n      ngDefaultControl\n      class=\"input-filter\"\n    />\n  </div>\n  <div class=\"field-suffix\">\n    <button type=\"button\" [disabled]=\"!filterName.value\" (click)=\"clearInputFilter()\" class=\"clear-button\">X</button>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".input-search{align-items:stretch;display:flex;flex-grow:1;height:30px;padding:2px}.mat-multiselect :host ::ng-deep .input-search{border-bottom:1px solid rgba(0,0,0,.12)}.mat-multiselect :host ::ng-deep .input-filter{border:none;flex-grow:1;font:inherit;outline:none}.mat-multiselect :host ::ng-deep .field-infix{display:flex;flex:1;padding:5px}.mat-multiselect :host ::ng-deep .field-suffix{margin:3px;white-space:nowrap}.mat-multiselect :host ::ng-deep .field-suffix button{border:none;border-radius:10px;font-size:inherit;height:20px;min-width:20px;padding:0;width:20px}.bs-multiselect :host ::ng-deep .clear-button{background-color:#f1f1f1;border:none;border-radius:2px;color:#666;cursor:pointer;font-size:inherit;max-width:20px;min-width:20px;padding:0}.bs-multiselect :host ::ng-deep .input-filter{border:1px solid #ccc;border-radius:2px;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-sizing:border-box;color:#666;cursor:pointer;font-size:inherit;height:30px;height:100%;padding-left:7px;width:100%}.bs-multiselect :host ::ng-deep .field-infix{display:flex;flex-grow:1}.bs-multiselect :host ::ng-deep .field-suffix{display:flex}"]
            }] }
];
/** @nocollapse */
FilterOptionsComponent.ctorParameters = () => [];
FilterOptionsComponent.propDecorators = {
    onSearchChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    FilterOptionsComponent.prototype.filterName;
    /** @type {?} */
    FilterOptionsComponent.prototype.filterNameSubscription;
    /** @type {?} */
    FilterOptionsComponent.prototype.onSearchChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLW9wdGlvbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYW5rYWpwYXJrYXIvRG9jdW1lbnRzL0dpdEh1Yi9tdWx0aXNlbGVjdC9wcm9qZWN0cy9tdWx0aXNlbGVjdC9zcmMvIiwic291cmNlcyI6WyJsaWIvZmlsdGVyLW9wdGlvbnMvZmlsdGVyLW9wdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsTUFBTSxFQUFFLFlBQVksRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFTN0MsTUFBTSxPQUFPLHNCQUFzQjtJQU1qQztRQUZVLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztJQUV2QyxDQUFDOzs7O0lBRWhCLGdCQUFnQjtRQUNkLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsc0JBQXNCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsU0FBUzs7OztRQUNsRSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUNyQyxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsc0JBQXNCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDNUMsQ0FBQzs7O1lBM0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixxY0FBOEM7Z0JBRTlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7Ozs7NkJBS0UsTUFBTTs7OztJQUhQLDRDQUF3Qjs7SUFDeEIsd0RBQXFDOztJQUVyQyxnREFBc0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT25EZXN0cm95LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21zLWZpbHRlci1vcHRpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZpbHRlci1vcHRpb25zLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZmlsdGVyLW9wdGlvbnMuY29tcG9uZW50LmNzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBGaWx0ZXJPcHRpb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBmaWx0ZXJOYW1lOiBGb3JtQ29udHJvbDtcbiAgZmlsdGVyTmFtZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIEBPdXRwdXQoKSBvblNlYXJjaENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBjbGVhcklucHV0RmlsdGVyKCkge1xuICAgIHRoaXMuZmlsdGVyTmFtZS5zZXRWYWx1ZSgnJyk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmZpbHRlck5hbWUgPSBuZXcgRm9ybUNvbnRyb2woJycpO1xuICAgIHRoaXMuZmlsdGVyTmFtZVN1YnNjcmlwdGlvbiA9IHRoaXMuZmlsdGVyTmFtZS52YWx1ZUNoYW5nZXMuc3Vic2NyaWJlKFxuICAgICAgdmFsID0+IHRoaXMub25TZWFyY2hDaGFuZ2UuZW1pdCh2YWwpXG4gICAgKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZmlsdGVyTmFtZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=