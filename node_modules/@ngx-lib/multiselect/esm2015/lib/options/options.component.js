/**
 * @fileoverview added by tsickle
 * Generated from: lib/options/options.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectionStrategy, TemplateRef, ViewChild } from '@angular/core';
export class OptionsComponent {
    constructor() {
        this._options = [];
        this.disabled = false;
        this.selectOption = new EventEmitter();
        this.start = 0;
        this.end = 5;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set options(value) {
        this._options = value;
    }
    /**
     * @return {?}
     */
    get() {
        return this._options;
    }
    /**
     * @param {?} option
     * @return {?}
     */
    getOptionStyle(option) {
        return { marked: option.ticked, disabled: this.disabled || option.disabled };
    }
    /**
     * @param {?} option
     * @return {?}
     */
    select(option) {
        this.selectOption.emit(option);
    }
    /**
     * @param {?} __0
     * @return {?}
     */
    updateRange({ start, end }) {
        this.filteredOptions = [...this._options].slice(start, end);
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        const { options } = changes;
        if (!this.optionsTemplate) {
            this.optionsTemplate = this.defaultOptionsTemplate;
        }
        if (options.currentValue !== options.previousValue) {
            this.updateRange({ start: this.start, end: this.end });
        }
    }
}
OptionsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ms-options',
                template: "<div class=\"options-container\" msVirtualScroll [totalCount]=\"_options?.length\" (rangeChanged)=\"updateRange($event)\">\n  <div #top class=\"top\"></div>\n  <ng-container *ngIf=\"filteredOptions.length; else noOptions\">\n    <div\n      class=\"option\"\n      [ngClass]=\"getOptionStyle(option)\"\n      *ngFor=\"let option of filteredOptions\"\n      (click)=\"select(option)\"\n    >\n      <ng-container\n        *ngTemplateOutlet=\"\n          optionsTemplate;\n          context: {\n            option: option\n          }\n        \"\n      ></ng-container>\n    </div>\n  </ng-container>\n  <div #bottom class=\"bottom\"></div>\n</div>\n<ng-template #defaultOptionsTemplate let-option=\"option\">\n  {{ option.name }}\n</ng-template>\n<ng-template #noOptions let-option=\"option\">\n  <div class=\"option message\">\n    No options available.\n  </div>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [""]
            }] }
];
/** @nocollapse */
OptionsComponent.ctorParameters = () => [];
OptionsComponent.propDecorators = {
    disabled: [{ type: Input }],
    options: [{ type: Input }],
    optionsTemplate: [{ type: Input }],
    selectOption: [{ type: Output }],
    defaultOptionsTemplate: [{ type: ViewChild, args: ['defaultOptionsTemplate', { static: true },] }]
};
if (false) {
    /** @type {?} */
    OptionsComponent.prototype._options;
    /** @type {?} */
    OptionsComponent.prototype.disabled;
    /** @type {?} */
    OptionsComponent.prototype.optionsTemplate;
    /** @type {?} */
    OptionsComponent.prototype.selectOption;
    /** @type {?} */
    OptionsComponent.prototype.start;
    /** @type {?} */
    OptionsComponent.prototype.end;
    /** @type {?} */
    OptionsComponent.prototype.filteredOptions;
    /** @type {?} */
    OptionsComponent.prototype.defaultOptionsTemplate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9ucy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BhbmthanBhcmthci9Eb2N1bWVudHMvR2l0SHViL211bHRpc2VsZWN0L3Byb2plY3RzL211bHRpc2VsZWN0L3NyYy8iLCJzb3VyY2VzIjpbImxpYi9vcHRpb25zL29wdGlvbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsWUFBWSxFQUNaLE1BQU0sRUFDTix1QkFBdUIsRUFDdkIsV0FBVyxFQUNYLFNBQVMsRUFHVixNQUFNLGVBQWUsQ0FBQztBQVF2QixNQUFNLE9BQU8sZ0JBQWdCO0lBbUIzQjtRQWxCQSxhQUFRLEdBQVUsRUFBRSxDQUFDO1FBRVosYUFBUSxHQUFZLEtBQUssQ0FBQztRQVF6QixpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFakQsVUFBSyxHQUFXLENBQUMsQ0FBQztRQUNsQixRQUFHLEdBQVcsQ0FBQyxDQUFDO0lBS0QsQ0FBQzs7Ozs7SUFmaEIsSUFBYSxPQUFPLENBQUMsS0FBSztRQUN4QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDOzs7O0lBQ0QsR0FBRztRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDOzs7OztJQVlELGNBQWMsQ0FBQyxNQUFXO1FBQ3hCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0UsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsTUFBTTtRQUNYLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRTtRQUN4QixJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM5RCxDQUFDOzs7O0lBRUQsUUFBUTtJQUNSLENBQUM7Ozs7O0lBRUQsV0FBVyxDQUFDLE9BQXNCO2NBQzFCLEVBQUUsT0FBTyxFQUFFLEdBQUcsT0FBTztRQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN6QixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztTQUNwRDtRQUNELElBQUksT0FBTyxDQUFDLFlBQVksS0FBSyxPQUFPLENBQUMsYUFBYSxFQUFFO1lBQ2xELElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDeEQ7SUFDSCxDQUFDOzs7WUFsREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxZQUFZO2dCQUN0Qiw4M0JBQXVDO2dCQUV2QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7YUFDaEQ7Ozs7O3VCQUlFLEtBQUs7c0JBQ0wsS0FBSzs4QkFNTCxLQUFLOzJCQUNMLE1BQU07cUNBTU4sU0FBUyxTQUFDLHdCQUF3QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7OztJQWhCckQsb0NBQXFCOztJQUVyQixvQ0FBbUM7O0lBT25DLDJDQUEyQzs7SUFDM0Msd0NBQWlEOztJQUVqRCxpQ0FBa0I7O0lBQ2xCLCtCQUFnQjs7SUFDaEIsMkNBQWdCOztJQUVoQixrREFBZ0ciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIE9uSW5pdCxcbiAgSW5wdXQsXG4gIEV2ZW50RW1pdHRlcixcbiAgT3V0cHV0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDaGlsZCxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgT25DaGFuZ2VzXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtcy1vcHRpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL29wdGlvbnMuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9vcHRpb25zLmNvbXBvbmVudC5jc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE9wdGlvbnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIF9vcHRpb25zOiBhbnlbXSA9IFtdO1xuXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNldCBvcHRpb25zKHZhbHVlKSB7XG4gICAgdGhpcy5fb3B0aW9ucyA9IHZhbHVlO1xuICB9XG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcbiAgfVxuICBASW5wdXQoKSBvcHRpb25zVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBPdXRwdXQoKSBzZWxlY3RPcHRpb24gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBzdGFydDogbnVtYmVyID0gMDtcbiAgZW5kOiBudW1iZXIgPSA1O1xuICBmaWx0ZXJlZE9wdGlvbnM7XG5cbiAgQFZpZXdDaGlsZCgnZGVmYXVsdE9wdGlvbnNUZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlIH0pIGRlZmF1bHRPcHRpb25zVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGdldE9wdGlvblN0eWxlKG9wdGlvbjogYW55KSB7XG4gICAgcmV0dXJuIHsgbWFya2VkOiBvcHRpb24udGlja2VkLCBkaXNhYmxlZDogdGhpcy5kaXNhYmxlZCB8fCBvcHRpb24uZGlzYWJsZWQgfTtcbiAgfVxuXG4gIHNlbGVjdChvcHRpb24pIHtcbiAgICB0aGlzLnNlbGVjdE9wdGlvbi5lbWl0KG9wdGlvbik7XG4gIH1cblxuICB1cGRhdGVSYW5nZSh7IHN0YXJ0LCBlbmQgfSkge1xuICAgIHRoaXMuZmlsdGVyZWRPcHRpb25zID0gWy4uLnRoaXMuX29wdGlvbnNdLnNsaWNlKHN0YXJ0LCBlbmQpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgY29uc3QgeyBvcHRpb25zIH0gPSBjaGFuZ2VzO1xuICAgIGlmICghdGhpcy5vcHRpb25zVGVtcGxhdGUpIHtcbiAgICAgIHRoaXMub3B0aW9uc1RlbXBsYXRlID0gdGhpcy5kZWZhdWx0T3B0aW9uc1RlbXBsYXRlO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5jdXJyZW50VmFsdWUgIT09IG9wdGlvbnMucHJldmlvdXNWYWx1ZSkge1xuICAgICAgdGhpcy51cGRhdGVSYW5nZSh7IHN0YXJ0OiB0aGlzLnN0YXJ0LCBlbmQ6IHRoaXMuZW5kIH0pO1xuICAgIH1cbiAgfVxufVxuIl19