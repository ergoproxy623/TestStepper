{"version":3,"file":"dropdown.state.js","sourceRoot":"","sources":["../../src/multiselect/dropdown.state.ts"],"names":[],"mappings":"OAAO,EAAC,YAAY,EAAE,UAAU,EAAC,MAAM,eAAe;AAItD;IASE;QATF,iBAoBC;QAnBC,cAAS,GAAkB,MAAM,CAAC;QAClC,iBAAY,GAAG,IAAI,YAAY,EAAW,CAAC;QAC3C,qBAAgB,GAAG,IAAI,YAAY,EAAW,CAAC;QAC/C,gBAAW,GAAG,IAAI,YAAY,EAAW,CAAC;QAMxC,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO;YACtC,KAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IACI,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;AAAD,CAAC,AApBD,IAoBC","sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\nimport {BsComponentRef} from '../component-loader/bs-component-ref.class';\n\n\nexport class DropdownState {\n  direction: 'down' | 'up' = 'down';\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise((resolve) => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}